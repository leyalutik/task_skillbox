/*
 *
 * Что нужно сделать

Петя и Вася играли в крестики-нолики и не стёрли результаты своей игры. Теперь перед вами табличка 3 ? 3, которая осталась после их поединка. Вы хотите понять, выиграл ли кто-то из них или они не доиграли.

На вход программе даётся три строки, кодирующие верхнюю, среднюю и нижнюю строчки игрового поля. Крестик обозначается символом X (английская заглавная буква X), нолик — символом O (заглавная английская буква O), пустая клетка — точкой.

Если ввод некорректен, то есть такая таблица не могла получиться в ходе настоящей игры, то надо написать в ответ слово Incorrect.

Если таблица корректна и выиграли крестики, то нужно вывести в ответ слова Petya won, если нолики — Vanya won, иначе (то есть они не доиграли или сыграли вничью) надо написать Nobody.


Рекомендации
    Активно используйте оператор индексации строки str[i], но помните что индексы начинаются с нуля, а не с единицы.
    Для того, чтобы обращаться к элементам игрового поля, стоит написать отдельную функцию получения элемента поля по его координатам (x, y). В таком случае, часть алгоритмов поиска победителя можно обобщить.
    Функции проверки поля на корректность можно отделить от функций и алгоритмов проверки победителя.
    При достаточной модульности функций, некоторые операции можно реализовать через уже существующие процедуры. К примеру, если уже есть проверка победителя в строке и имеется функция получения колонки по индексу, то функцию поиска победителя в колонке можно реализовать через обе них.
    Проход по диагонали поля можно осуществить в цикле, используя счётчик цикла в качестве обоих координат элемента. Для второй диагонали нужно обратить одну из координат (2 - x или 2 - y).
    Общие условия некорректности поля таковы: 
        Выявлено несколько победителей одновременно
        Нолики победили, а крестиков больше чем ноликов
        Крестики победили, а ноликов столько же или больше
        Нолики и крестики победили несколько раз
        На поле есть невалидные символы
    Для упрощения лучше создать отдельные функции для проверки победителя в строке или столбце, которые на вход принимают строку, а на выходе выдают символ победителя. То есть ‘X’, ‘O’ или ‘.’


Что оценивается

Корректность работы программы по анализу игры на различных вводных данных.
 */
/*
 
  * Game Tic-tac-toe
  * void new_step (std::string& grid, char symb_step, size_t index_space_cell) // Меняем таблицу, input on random space cell
  * bool check_victory(const std::string& grid, char symb);
  * void output_grid(const std::string& grid);
  */

 /*
  *Algorithm

  0<=i<3
  Ввод строки i
  проверка
  Если проперка не пройдена возращаемся в начало
  Если проверка пройдена добавляем строку i в grid 

  Заполняем X_indexes, O_indexes XO_indexes(const std::string grid) 

  Вывод таблицы

  Вывод анализа игры
	

  */



#include "tic_tac_toe.h"

size_t find_index_space_cell (std::string& grid, int miss_cell) 
{
	if(!check_string(grid,9,".XO"))
	{
		std::cout << "Incorrect grid for Tic-tac-toe\n";
		return grid.size();
	}

	int16_t miss = -1;
	for(size_t i=0; i<grid.size(); ++i)
	{
		if(grid[i] == '.')
		{
			++miss;
			if(miss == miss_cell)
			{
				return i;
			}
		}

	}
	std::cout << "Don't find space cell in function find_index_space_cell().\n";
	return grid.size();
}




void play_Tic_tac_toe()
{
	std::string grid = ".........";
	//X step
	//create random number
	bool victory = false;
	std::vector<char> step_symb = {'X','O'};
	int index_symb = 0;
	int16_t step = 0;

	std::cout << "----    Game Tic-tac-toe    -----\n\n"; 

	while(!victory && step < 9)
	{
		++step;

		std::srand(static_cast<unsigned int>(std::time(nullptr)));
		int miss_cells = (step != 9 ? int(std::rand()) % (8-step+1) : 0);	

		std::cout << "Step " << step << ": Turn for " << step_symb[index_symb] 
			<< " (miss_cells=" << miss_cells << ")\n";
		new_step(grid,step_symb[index_symb],find_index_space_cell(grid,miss_cells));
		output(grid);

		if(check_victory(grid,step_symb[index_symb]))
		{
			std::cout << step_symb[index_symb] << " is victory\n";
			victory = true;
		}
		++ index_symb;
		index_symb %= 2;

		std::cout << "Press the buttom.\n";
		getchar();	


	}
}

